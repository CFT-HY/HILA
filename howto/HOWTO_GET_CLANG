You can obtain the statically linked hilapp-executable from
  <put here hilapp link!>

If you need to develop or debug hilapp, the llvm/clang development toolchain
is needed.  Note that if you need a statically linked hilapp (for portability), the 
option 3 below is needed (as far as I know)

--------------------------

1. The easiest option is to use linux distribution packages (to be tested on a Mac!).
Linux distributions include llvm and clang packages needed for the compilation.  
For example, in Ubuntu 20.04 the following seems to work:

> apt install clang-10 llvm-10 clang-tools-10 libclang-common-10-dev libclang-cpp10-dev libclang-10-dev clang-format-10

--------------------------

2. Binary apt/rpm -distribution from llvm.org

See page https://apt.llvm.org/ for the correct apt/yum commands for debian/ubuntu and rpms.

* add deb to sources (this for ubuntu 16.04 xenial).  Change -11 to the correct llvm/clang version!
sudo add-apt-repository 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-11 main'

* with key
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -

* install (again, change 11 to suit!)
sudo apt update
sudo apt install clang-11 clang-tools-11 clang-11-doc libclang-common-11-dev libclang-11-dev libclang1-11 clang-format-11

* Clang 8 or above is required.

* NOTE: this gives you only .so -libraries.  If you need a statically compiled "hilapp"-program,
  see the instruction below.

---------------------------

3. Source distribution and compiling

Source distribution seems to be required if you want to make statically compiled hilapp.

For download and compilation, see page
  https://clang.llvm.org/get_started.html
for instructions.  Any modern gcc or clang should be sufficient for building.
Python and cmake are also needed.

In summary:

* Download with
git clone https://github.com/llvm/llvm-project.git

* Compile:

cd llvm-project
mkdir build
cd build
cmake -G "Unix Makefiles" -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Release ../llvm
make -j4

* This leaves binaries in llvm-project/build/bin -directory.  This is sufficient for hilapp.
  (make install would install these on suitable places)
* -j -option does parallel make, best number depends on the computer doing the compilation
* Build types are Release, MinSizeRel, Debug, RelWithDebInfo


