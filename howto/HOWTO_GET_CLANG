You can obtain the statically linked hilapp-executable from
  <put here hilapp link!>

If you need to develop or debug hilapp, the llvm/clang development toolchain
is needed.  Note that if you need a statically linked hilapp (for portability), the 
option 3 below is needed (as far as I know)

--------------------------

1. The easiest option is to use linux distribution packages (to be tested on a Mac!).
Linux distributions include llvm and clang packages needed for the compilation.  
For example, in Ubuntu 20.04 the following seems to work:

> apt install clang-10 llvm-10 clang-tools-10 libclang-common-10-dev libclang-cpp10-dev libclang-10-dev clang-format-10

--------------------------

2. Binary apt/rpm -distribution from llvm.org

See page https://apt.llvm.org/ for the correct apt/yum commands for debian/ubuntu and rpms.

* add deb to sources (this for ubuntu 16.04 xenial).  Change -11 to the correct llvm/clang version!
sudo add-apt-repository 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-11 main'

* with key
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -

* install (again, change 11 to suit!)
sudo apt update
sudo apt install clang-11 clang-tools-11 clang-11-doc libclang-common-11-dev libclang-11-dev libclang1-11 clang-format-11

* Clang 8 or above is required.

* NOTE: this gives you only .so -libraries.  If you need a statically compiled "hilapp"-program,
  see the instruction below.

---------------------------

3. Source distribution and compiling

see page https://clang.llvm.org/get_started.html  for compiler etc. requirements.  Any modern
gcc or clang should be sufficient.  Python and cmake are also needed.

DOWNLOAD SEEMS TO HAVE CHANGED FROM THE ONE BELOW; NOW
git clone https://github.com/llvm/llvm-project.git
GETS ALL IN ONE GO

* Download with (this gives the latest stable version)

git clone http://llvm.org/git/llvm.git
cd llvm/tools
git clone http://llvm.org/git/clang.git
cd clang/tools
git clone http://llvm.org/git/clang-tools-extra.git extra

* Compile with 

cd ../../../..  (At top level again)
mkdir build
# (in-tree build is not supported)
cd build
cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ../llvm
make
* make takes several hours.
* Build types are Release, MinSizeRel, Debug, RelWithDebInfo

